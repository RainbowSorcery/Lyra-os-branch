[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_load_eflags
	EXTERN	_io_cli
	EXTERN	_io_out8
	EXTERN	_io_store_eflags
	EXTERN	_io_hlt
[FILE "bootpack.c"]
[SECTION .text]
	ALIGN	2
	GLOBAL	_set_palette
_set_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	MOV	EBX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	ESI,DWORD [16+EBP]
	CALL	_io_load_eflags
	MOV	DWORD [-16+EBP],EAX
	CALL	_io_cli
	PUSH	EBX
	PUSH	968
	CALL	_io_out8
	CMP	EBX,EDI
	POP	EAX
	POP	EDX
	JLE	L6
L8:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_io_store_eflags
L6:
	MOV	AL,BYTE [ESI]
	INC	EBX
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [1+ESI]
	SHR	AL,2
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	MOV	AL,BYTE [2+ESI]
	SHR	AL,2
	ADD	ESI,3
	MOVZX	EAX,AL
	PUSH	EAX
	PUSH	969
	CALL	_io_out8
	ADD	ESP,24
	CMP	EBX,EDI
	JLE	L6
	JMP	L8
[SECTION .data]
_table_rgb.0:
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-58
	DB	-58
	DB	-58
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	-124
	DB	-124
	DB	-124
	DB	-74
	DB	-93
	DB	-68
[SECTION .text]
	ALIGN	2
	GLOBAL	_init_palette
_init_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	_table_rgb.0
	PUSH	16
	PUSH	0
	CALL	_set_palette
	LEAVE
	RET
	ALIGN	2
	GLOBAL	_boxfill8
_boxfill8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDI
	PUSH	EDI
	MOV	DL,BYTE [28+EBP]
	MOV	EAX,DWORD [24+EBP]
	MOV	BYTE [-13+EBP],DL
	MOV	ESI,DWORD [20+EBP]
	MOV	EDX,DWORD [16+EBP]
	CMP	EDX,EAX
	JGE	L22
	MOV	EBX,EDX
	SUB	EAX,EDX
	IMUL	EBX,EBX,320
	MOV	EDX,EAX
L20:
	MOV	ECX,DWORD [12+EBP]
	CMP	ECX,ESI
	JGE	L24
	MOV	EDI,DWORD [8+EBP]
	ADD	EDI,EBX
	ADD	EDI,ECX
	MOV	DWORD [-20+EBP],EDI
L19:
	MOV	EDI,DWORD [-20+EBP]
	MOV	AL,BYTE [-13+EBP]
	INC	ECX
	MOV	BYTE [EDI],AL
	INC	EDI
	MOV	DWORD [-20+EBP],EDI
	CMP	ECX,ESI
	JL	L19
L24:
	ADD	EBX,320
	DEC	EDX
	JNE	L20
L22:
	POP	EBX
	POP	ESI
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	ALIGN	2
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,20
	MOV	EAX,DWORD [4088]
	MOV	DWORD [-16+EBP],EAX
	MOVSX	EAX,WORD [4086]
	MOVSX	EBX,WORD [4084]
	MOV	DWORD [-20+EBP],EAX
	CALL	_init_palette
	PUSH	15
	LEA	ESI,DWORD [-280+EBX]
	PUSH	180
	PUSH	EBX
	PUSH	0
	PUSH	0
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [-20+EBP]
	PUSH	8
	MOV	DWORD [-24+EBP],EAX
	PUSH	200
	SUB	EAX,20
	PUSH	EBX
	PUSH	EAX
	PUSH	0
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [-24+EBP]
	ADD	ESP,48
	SUB	EAX,19
	PUSH	7
	PUSH	182
	PUSH	EBX
	PUSH	EAX
	PUSH	0
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EDI,DWORD [-24+EBP]
	PUSH	7
	SUB	EDI,15
	PUSH	186
	PUSH	ESI
	PUSH	EDI
	PUSH	2
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	MOV	EAX,DWORD [-24+EBP]
	ADD	ESP,48
	SUB	EAX,6
	MOV	DWORD [-28+EBP],EAX
	PUSH	14
	PUSH	195
	PUSH	ESI
	PUSH	EAX
	PUSH	3
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	LEA	EAX,DWORD [-317+EBX]
	PUSH	7
	PUSH	195
	PUSH	EAX
	PUSH	EDI
	PUSH	2
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	LEA	EAX,DWORD [-279+EBX]
	ADD	ESP,48
	PUSH	0
	PUSH	196
	PUSH	EAX
	PUSH	EDI
	PUSH	40
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	LEA	EAX,DWORD [-124+EBX]
	PUSH	0
	SUB	EBX,123
	PUSH	EAX
	MOV	EAX,DWORD [-24+EBP]
	PUSH	40
	SUB	EAX,5
	PUSH	EAX
	PUSH	2
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	ADD	ESP,48
	PUSH	5
	PUSH	EBX
	PUSH	40
	PUSH	DWORD [-28+EBP]
	PUSH	40
	PUSH	DWORD [-16+EBP]
	CALL	_boxfill8
	ADD	ESP,24
L26:
	CALL	_io_hlt
	JMP	L26
