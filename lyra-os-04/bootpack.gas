	.file	"bootpack.c"
	.text
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	%ebx
	pushl	$968
	call	_io_out8
	cmpl	%edi, %ebx
	popl	%eax
	popl	%edx
	jle	L6
L8:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L6:
	movb	(%esi), %al
	incl	%ebx
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	cmpl	%edi, %ebx
	jle	L6
	jmp	L8
	.data
_table_rgb.0:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-74
	.byte	-93
	.byte	-68
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$_table_rgb.0
	pushl	$16
	pushl	$0
	call	_set_palette
	leave
	ret
	.balign 2
.globl _boxfill8
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
_boxfill8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%edi
	pushl	%edi
	movb	28(%ebp), %dl
	movl	24(%ebp), %eax
	movb	%dl, -13(%ebp)
	movl	20(%ebp), %esi
	movl	16(%ebp), %edx
	cmpl	%eax, %edx
	jge	L22
	movl	%edx, %ebx
	subl	%edx, %eax
	imull	$320, %ebx, %ebx
	movl	%eax, %edx
L20:
	movl	12(%ebp), %ecx
	cmpl	%esi, %ecx
	jge	L24
	movl	8(%ebp), %edi
	addl	%ebx, %edi
	addl	%ecx, %edi
	movl	%edi, -20(%ebp)
L19:
	movl	-20(%ebp), %edi
	movb	-13(%ebp), %al
	incl	%ecx
	movb	%al, (%edi)
	incl	%edi
	movl	%edi, -20(%ebp)
	cmpl	%esi, %ecx
	jl	L19
L24:
	addl	$320, %ebx
	decl	%edx
	jne	L20
L22:
	popl	%ebx
	popl	%esi
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putfont8
	.def	_putfont8;	.scl	2;	.type	32;	.endef
_putfont8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%ecx
	pushl	%ecx
	movb	24(%ebp), %al
	movl	16(%ebp), %edi
	movb	%al, -17(%ebp)
L38:
	movl	28(%ebp), %ecx
	movb	(%ebx,%ecx), %dl
	testb	%dl, %dl
	jns	L30
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, (%eax,%esi)
L30:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L31
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, 1(%eax,%esi)
L31:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L32
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, 2(%eax,%esi)
L32:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L33
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, 3(%eax,%esi)
L33:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L34
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, 4(%eax,%esi)
L34:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L35
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, 5(%eax,%esi)
L35:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L36
	movl	20(%ebp), %eax
	movl	8(%ebp), %esi
	addl	%ebx, %eax
	movb	-17(%ebp), %cl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%cl, 6(%eax,%esi)
L36:
	andl	$1, %edx
	testb	%dl, %dl
	je	L28
	movl	20(%ebp), %eax
	movl	8(%ebp), %ecx
	addl	%ebx, %eax
	movb	-17(%ebp), %dl
	imull	12(%ebp), %eax
	addl	%edi, %eax
	movb	%dl, 7(%eax,%ecx)
L28:
	incl	%ebx
	cmpl	$15, %ebx
	jle	L38
	popl	%eax
	popl	%edx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
_font_A.1:
	.byte	0
	.byte	24
	.byte	24
	.byte	24
	.byte	24
	.byte	36
	.byte	36
	.byte	36
	.byte	36
	.byte	126
	.byte	66
	.byte	66
	.byte	66
	.byte	-25
	.byte	0
	.byte	0
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
